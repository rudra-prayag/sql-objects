1.
Create a procedure to accept the values for the columns in Emp_EH. Handle the error using exception handling concept. Show the message as “Error occurred” in case of anything wrong.

CREATE TABLE Emp_EH (
    Emp_ID INT,
    Name VARCHAR(50),
    Email VARCHAR(100)
);

DELIMITER //
CREATE PROCEDURE `Insert_EH_EMP`(
    IN EmpID INT,
    IN EmpName VARCHAR(50),
    IN EmailAddress VARCHAR(100)
)
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        SELECT 'Error occurred';
    END;
    INSERT INTO Emp_EH (EmpID, EmpName, EmailAddress)
    VALUES (EmpID, EmpName, EmailAddress);
    
    select * from EH_EMP;
    SELECT 'Data inserted successfully';
END//

CALL Insert_Emp(Null,"A");
select * from emp_eh

Create procedure 'Exception_Handler'(num integer)
BEGIN
declare exit handler for 1146
BEGIN
	select "check your table name" as Msg;
END;
declare exit handler for 1054
begin
	select "chack your column name" as msg;
end;

-- procedure starts
select "procedure Begins" as msg;
if num = 1 then
	select * from authorss'
else
	select authorname from authors;
select "procedure ends: as msg;


2.
Use demoDB create Emp_EH table with below fields
- Emp_ID(primary key)
- Name(should not contain null values)

Create a procedure which should insert the data in EMP_EH from user input values. Handle the Null value erro using exception handling

The output should carry a message ' Dont insert null values in EMP_ID or Name

CREATE TABLE Emp_EH(
Emp_ID INT pRIMARY KEY,
Name VARCHAR(100)NOT NULL
);

DELIMITER //
CREATE PROCEDURE Insert_Emp(IN p_id INT, IN p_name VARCHAR(100))
BEGIN
DECLARE EXIT HANDLER FOR 1048
SELECT "Don't insert null vallues in Emp ID or Name" As Message;

Insert INTO Emp_EH
VALUES(p_id, p_name);
SELECT * FROM Emp_EH;

END //
CALL Insert_Emp(Null,"A);

3.


